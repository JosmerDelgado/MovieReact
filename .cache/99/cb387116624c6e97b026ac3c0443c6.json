{"id":"../node_modules/image-promise/dist/image-promise.common-js.js","dependencies":[{"name":"C:\\Users\\Josmer\\Documents\\proyectos\\JS\\MovieReact\\package.json","includedInParent":true,"mtime":1554832982179},{"name":"C:\\Users\\Josmer\\Documents\\proyectos\\JS\\MovieReact\\node_modules\\image-promise\\package.json","includedInParent":true,"mtime":1554817248731}],"generated":{"js":"/*! npm.im/image-promise 5.0.1 */\n'use strict';\n\nfunction load(image) {\n\tif (!image) {\n\t\treturn Promise.reject();\n\t} else if (typeof image === 'string') {\n\t\t/* Create a <img> from a string */\n\t\tvar src = image;\n\t\timage = new Image();\n\t\timage.src = src;\n\t} else if (image.length !== undefined) {\n\t\t/* Treat as multiple images */\n\n\t\t// Momentarily ignore errors\n\t\tvar reflected = [].map.call(image, function (img) { return load(img).catch(function (err) { return err; }); });\n\n\t\treturn Promise.all(reflected).then(function (results) {\n\t\t\tvar loaded = results.filter(function (x) { return x.naturalWidth; });\n\t\t\tif (loaded.length === results.length) {\n\t\t\t\treturn loaded;\n\t\t\t}\n\t\t\treturn Promise.reject({\n\t\t\t\tloaded: loaded,\n\t\t\t\terrored: results.filter(function (x) { return !x.naturalWidth; })\n\t\t\t});\n\t\t});\n\t} else if (image.tagName !== 'IMG') {\n\t\treturn Promise.reject();\n\t}\n\n\tvar promise = new Promise(function (resolve, reject) {\n\t\tif (image.naturalWidth) {\n\t\t\t// If the browser can determine the naturalWidth the\n\t\t\t// image is already loaded successfully\n\t\t\tresolve(image);\n\t\t} else if (image.complete) {\n\t\t\t// If the image is complete but the naturalWidth is 0px\n\t\t\t// it is probably broken\n\t\t\treject(image);\n\t\t} else {\n\t\t\timage.addEventListener('load', fullfill);\n\t\t\timage.addEventListener('error', fullfill);\n\t\t}\n\t\tfunction fullfill() {\n\t\t\tif (image.naturalWidth) {\n\t\t\t\tresolve(image);\n\t\t\t} else {\n\t\t\t\treject(image);\n\t\t\t}\n\t\t\timage.removeEventListener('load', fullfill);\n\t\t\timage.removeEventListener('error', fullfill);\n\t\t}\n\t});\n\tpromise.image = image;\n\treturn promise;\n}\n\nmodule.exports = load;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/image-promise/dist/image-promise.common-js.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}}],"sources":{"../node_modules/image-promise/dist/image-promise.common-js.js":"/*! npm.im/image-promise 5.0.1 */\n'use strict';\n\nfunction load(image) {\n\tif (!image) {\n\t\treturn Promise.reject();\n\t} else if (typeof image === 'string') {\n\t\t/* Create a <img> from a string */\n\t\tvar src = image;\n\t\timage = new Image();\n\t\timage.src = src;\n\t} else if (image.length !== undefined) {\n\t\t/* Treat as multiple images */\n\n\t\t// Momentarily ignore errors\n\t\tvar reflected = [].map.call(image, function (img) { return load(img).catch(function (err) { return err; }); });\n\n\t\treturn Promise.all(reflected).then(function (results) {\n\t\t\tvar loaded = results.filter(function (x) { return x.naturalWidth; });\n\t\t\tif (loaded.length === results.length) {\n\t\t\t\treturn loaded;\n\t\t\t}\n\t\t\treturn Promise.reject({\n\t\t\t\tloaded: loaded,\n\t\t\t\terrored: results.filter(function (x) { return !x.naturalWidth; })\n\t\t\t});\n\t\t});\n\t} else if (image.tagName !== 'IMG') {\n\t\treturn Promise.reject();\n\t}\n\n\tvar promise = new Promise(function (resolve, reject) {\n\t\tif (image.naturalWidth) {\n\t\t\t// If the browser can determine the naturalWidth the\n\t\t\t// image is already loaded successfully\n\t\t\tresolve(image);\n\t\t} else if (image.complete) {\n\t\t\t// If the image is complete but the naturalWidth is 0px\n\t\t\t// it is probably broken\n\t\t\treject(image);\n\t\t} else {\n\t\t\timage.addEventListener('load', fullfill);\n\t\t\timage.addEventListener('error', fullfill);\n\t\t}\n\t\tfunction fullfill() {\n\t\t\tif (image.naturalWidth) {\n\t\t\t\tresolve(image);\n\t\t\t} else {\n\t\t\t\treject(image);\n\t\t\t}\n\t\t\timage.removeEventListener('load', fullfill);\n\t\t\timage.removeEventListener('error', fullfill);\n\t\t}\n\t});\n\tpromise.image = image;\n\treturn promise;\n}\n\nmodule.exports = load;\n"},"lineCount":60}},"error":null,"hash":"d7d289ad658fc271375d35459db3ba87","cacheData":{"env":{}}}